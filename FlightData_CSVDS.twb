<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
        <calculation class='tableau' formula='1000' />
        <range max='100000' min='1' />
      </column>
    </datasource>
    <datasource caption='flight_data (default.flight_data)' inline='true' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' version='9.3'>
      <connection authentication='no' authentication-type='0' class='hadoophive' connection-type='Impala' dbname='' odbc-connect-string-extras='' one-time-sql='' port='21050' schema='default' server='23.20.169.115' sslcert='' sslmode='' username=''>
        <relation name='flight_data' table='[default].[flight_data]' type='table' />
        <connection-customization class='hadoophive' enabled='false' version='9.3'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='yes' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='yes' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='yes' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='yes' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='yes' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='yes' />
            <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='yes' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='yes' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
            <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='no' />
            <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dayofmonth</remote-name>
            <remote-type>3</remote-type>
            <local-name>[dayofmonth]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>dayofmonth</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dayofweek</remote-name>
            <remote-type>3</remote-type>
            <local-name>[dayofweek]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>dayofweek</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flightdate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[flightdate]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>flightdate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uniquecarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[uniquecarrier]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>uniquecarrier</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airlineid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[airlineid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>airlineid</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tailnum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>tailnum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flightnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[flightnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>flightnum</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originairportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[originairportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originairportid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originairportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[originairportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originairportseqid</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origincitymarketid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[origincitymarketid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>origincitymarketid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>origin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origincityname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origincityname]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>origincityname</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originstate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[originstate]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originstate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originstatefips</remote-name>
            <remote-type>3</remote-type>
            <local-name>[originstatefips]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originstatefips</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originstatename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[originstatename]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originstatename</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originwac</remote-name>
            <remote-type>3</remote-type>
            <local-name>[originwac]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>originwac</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destairportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[destairportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>destairportid</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destairportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[destairportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>destairportseqid</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destcitymarketid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[destcitymarketid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>destcitymarketid</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>dest</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destcityname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destcityname]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>destcityname</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deststate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deststate]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>deststate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deststatefips</remote-name>
            <remote-type>3</remote-type>
            <local-name>[deststatefips]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>deststatefips</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deststatename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deststatename]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>deststatename</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destwac</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destwac]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>destwac</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crsdeptime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crsdeptime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>crsdeptime</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deptime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[deptime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>deptime</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[depdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>depdelay</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depdelayminutes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[depdelayminutes]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>depdelayminutes</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depdel15</remote-name>
            <remote-type>3</remote-type>
            <local-name>[depdel15]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>depdel15</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departuredelaygroups</remote-name>
            <remote-type>3</remote-type>
            <local-name>[departuredelaygroups]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>departuredelaygroups</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deptimeblk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deptimeblk]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>deptimeblk</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxiout</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taxiout]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>taxiout</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>wheelsoff</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>wheelson</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxiin</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taxiin]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>taxiin</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crsarrtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crsarrtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>crsarrtime</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[arrtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrtime</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[arrdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrdelay</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrdelayminutes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[arrdelayminutes]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrdelayminutes</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrdel15</remote-name>
            <remote-type>3</remote-type>
            <local-name>[arrdel15]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrdel15</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrivaldelaygroups</remote-name>
            <remote-type>3</remote-type>
            <local-name>[arrivaldelaygroups]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrivaldelaygroups</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrtimeblk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrtimeblk]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>arrtimeblk</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancelled</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cancelled]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>cancelled</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancellationcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cancellationcode]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>cancellationcode</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diverted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[diverted]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>diverted</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crselapsedtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crselapsedtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>crselapsedtime</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actualelapsedtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actualelapsedtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>actualelapsedtime</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airtime</remote-name>
            <remote-type>4</remote-type>
            <local-name>[airtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>airtime</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flights</remote-name>
            <remote-type>3</remote-type>
            <local-name>[flights]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>flights</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>4</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distancegroup</remote-name>
            <remote-type>3</remote-type>
            <local-name>[distancegroup]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>distancegroup</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrierdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[carrierdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>carrierdelay</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weatherdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[weatherdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>weatherdelay</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nasdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[nasdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>nasdelay</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>securitydelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[securitydelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>securitydelay</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lateaircraftdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lateaircraftdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>lateaircraftdelay</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>firstdeptime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[firstdeptime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>firstdeptime</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totaladdgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[totaladdgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>totaladdgtime</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longestaddgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[longestaddgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>longestaddgtime</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>divairportlandings</remote-name>
            <remote-type>3</remote-type>
            <local-name>[divairportlandings]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>divairportlandings</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>divreacheddest</remote-name>
            <remote-type>3</remote-type>
            <local-name>[divreacheddest]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>divreacheddest</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>divactualelapsedtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[divactualelapsedtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>divactualelapsedtime</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>divarrdelay</remote-name>
            <remote-type>4</remote-type>
            <local-name>[divarrdelay]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>divarrdelay</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>divdistance</remote-name>
            <remote-type>4</remote-type>
            <local-name>[divdistance]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>divdistance</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1airport</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1airport]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1airport</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1airportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1airportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1airportid</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1airportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1airportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1airportseqid</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1wheelson</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1totalgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1totalgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1totalgtime</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1longestgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1longestgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1longestgtime</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1wheelsoff</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div1tailnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div1tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div1tailnum</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2airport</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2airport]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2airport</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2airportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2airportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2airportid</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2airportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2airportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2airportseqid</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2wheelson</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2totalgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2totalgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2totalgtime</remote-alias>
            <ordinal>82</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2longestgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2longestgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2longestgtime</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2wheelsoff</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div2tailnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div2tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div2tailnum</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3airport</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3airport]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3airport</remote-alias>
            <ordinal>86</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3airportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3airportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3airportid</remote-alias>
            <ordinal>87</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3airportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3airportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3airportseqid</remote-alias>
            <ordinal>88</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3wheelson</remote-alias>
            <ordinal>89</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3totalgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3totalgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3totalgtime</remote-alias>
            <ordinal>90</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3longestgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3longestgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3longestgtime</remote-alias>
            <ordinal>91</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3wheelsoff</remote-alias>
            <ordinal>92</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div3tailnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div3tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div3tailnum</remote-alias>
            <ordinal>93</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4airport</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4airport]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4airport</remote-alias>
            <ordinal>94</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4airportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4airportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4airportid</remote-alias>
            <ordinal>95</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4airportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4airportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4airportseqid</remote-alias>
            <ordinal>96</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4wheelson</remote-alias>
            <ordinal>97</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4totalgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4totalgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4totalgtime</remote-alias>
            <ordinal>98</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4longestgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4longestgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4longestgtime</remote-alias>
            <ordinal>99</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4wheelsoff</remote-alias>
            <ordinal>100</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div4tailnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div4tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div4tailnum</remote-alias>
            <ordinal>101</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5airport</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5airport]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5airport</remote-alias>
            <ordinal>102</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5airportid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5airportid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5airportid</remote-alias>
            <ordinal>103</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5airportseqid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5airportseqid]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5airportseqid</remote-alias>
            <ordinal>104</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5wheelson</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5wheelson]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5wheelson</remote-alias>
            <ordinal>105</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5totalgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5totalgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5totalgtime</remote-alias>
            <ordinal>106</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5longestgtime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5longestgtime]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5longestgtime</remote-alias>
            <ordinal>107</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5wheelsoff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5wheelsoff]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5wheelsoff</remote-alias>
            <ordinal>108</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div5tailnum</remote-name>
            <remote-type>3</remote-type>
            <local-name>[div5tailnum]</local-name>
            <parent-name>[flight_data]</parent-name>
            <remote-alias>div5tailnum</remote-alias>
            <ordinal>109</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]&quot;' value='Avg. Delay' />
          <alias key='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]&quot;' value='Number of Flights' />
          <alias key='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[usr:Calculation_69805825655717888:qk]&quot;' value='Delay' />
        </aliases>
      </column>
      <column caption='CrsArrivalHour' datatype='integer' name='[Calculation_1515742780957089793]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT(FLOOR([crsarrtime]/100.0))%24' />
      </column>
      <column caption='DelayPct' datatype='real' name='[Calculation_69805825655717888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_854839535460003841])/SUM([airtime])' />
      </column>
      <column caption='IsDelayed' datatype='string' name='[Calculation_854839535450046464]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Calculation_854839535460003841]) &gt; 0&#13;&#10;then &quot;Delayed&quot;&#13;&#10;else if ([Calculation_854839535460003841]) &lt; 0&#13;&#10;then &quot;Early&quot;&#13;&#10;ELSE &quot;On-Time&quot;&#13;&#10;END&#13;&#10;END' />
      </column>
      <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
      </column>
      <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[carrier]' />
        <aliases>
          <alias key='&quot;9E&quot;' value='Endeavor' />
          <alias key='&quot;AA&quot;' value='American' />
          <alias key='&quot;AS&quot;' value='Alaska' />
          <alias key='&quot;B6&quot;' value='JetBlue' />
          <alias key='&quot;CO&quot;' value='Continental' />
          <alias key='&quot;DL&quot;' value='Delta' />
          <alias key='&quot;EV&quot;' value='ExpressJet' />
          <alias key='&quot;F9&quot;' value='Pro Air' />
          <alias key='&quot;FL&quot;' value='Airtran' />
          <alias key='&quot;HA&quot;' value='Hawaiin' />
          <alias key='&quot;MQ&quot;' value='Envoy' />
          <alias key='&quot;NK&quot;' value='Spirit' />
          <alias key='&quot;OH&quot;' value='PSA' />
          <alias key='&quot;OO&quot;' value='SKyWest' />
          <alias key='&quot;UA&quot;' value='United' />
          <alias key='&quot;US&quot;' value='US Airways' />
          <alias key='&quot;VX&quot;' value='Virgin America' />
          <alias key='&quot;WN&quot;' value='SouthWest' />
          <alias key='&quot;XE&quot;' value='Express Jet' />
          <alias key='&quot;YV&quot;' value='Mesa' />
        </aliases>
      </column>
      <column datatype='string' name='[Carrier (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier]'>
          <bin value='&quot;EV&quot;'>
            <value>&quot;EV&quot;</value>
            <value>&quot;XE&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;EV&quot;' value='XE' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actualelapsedtime' datatype='integer' name='[actualelapsedtime]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Airlineid' datatype='integer' name='[airlineid]' role='dimension' semantic-role='' type='ordinal' />
      <column caption='Airtime' datatype='real' name='[airtime]' role='measure' type='quantitative' />
      <column caption='Arrdel15' datatype='integer' name='[arrdel15]' role='measure' type='quantitative' />
      <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
      <column caption='Arrdelayminutes' datatype='real' name='[arrdelayminutes]' role='measure' type='quantitative' />
      <column caption='Arrivaldelaygroups' datatype='integer' name='[arrivaldelaygroups]' role='measure' type='quantitative' />
      <column caption='Arrtime' datatype='integer' name='[arrtime]' role='measure' type='quantitative' />
      <column caption='Arrtimeblk' datatype='string' name='[arrtimeblk]' role='dimension' type='nominal' />
      <column caption='Cancellationcode' datatype='string' name='[cancellationcode]' role='dimension' type='nominal' />
      <column caption='Cancelled' datatype='integer' name='[cancelled]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrierdelay' datatype='real' name='[carrierdelay]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Crsarrtime' datatype='integer' name='[crsarrtime]' role='dimension' type='ordinal' />
      <column caption='Crsdeptime' datatype='integer' name='[crsdeptime]' role='measure' type='quantitative' />
      <column caption='Crselapsedtime' datatype='integer' name='[crselapsedtime]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Dayofmonth' datatype='integer' name='[dayofmonth]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Dayofweek' datatype='integer' name='[dayofweek]' role='dimension' type='ordinal' />
      <column caption='Departuredelaygroups' datatype='integer' name='[departuredelaygroups]' role='measure' type='quantitative' />
      <column caption='Depdel15' datatype='integer' name='[depdel15]' role='measure' type='quantitative' />
      <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
      <column caption='Depdelayminutes' datatype='real' name='[depdelayminutes]' role='measure' type='quantitative' />
      <column caption='Deptime' datatype='integer' name='[deptime]' role='measure' type='quantitative' />
      <column caption='Deptimeblk' datatype='string' name='[deptimeblk]' role='dimension' type='nominal' />
      <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Destairportid' datatype='integer' name='[destairportid]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Destairportseqid' datatype='integer' name='[destairportseqid]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Destcitymarketid' datatype='integer' name='[destcitymarketid]' role='dimension' type='ordinal' />
      <column caption='Destcity' datatype='string' name='[destcityname - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[destcityname]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [destcityname], &quot;,&quot;, 1 ) )' />
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dallas/Fort Worth&quot;' value='&quot;Dallas&quot;' />
        </semantic-values>
      </column>
      <column caption='Destcityname' datatype='string' name='[destcityname]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Deststate' datatype='string' name='[deststate]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Deststatefips' datatype='integer' name='[deststatefips]' role='measure' type='quantitative' />
      <column caption='Deststatename' datatype='string' name='[deststatename]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Destwac' datatype='string' name='[destwac]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='Distancegroup' datatype='integer' name='[distancegroup]' role='measure' type='quantitative' />
      <column caption='Div1Airport' datatype='integer' name='[div1airport]' role='measure' type='quantitative' />
      <column caption='Div1Airportid' datatype='integer' name='[div1airportid]' role='measure' type='quantitative' />
      <column caption='Div1Airportseqid' datatype='integer' name='[div1airportseqid]' role='measure' type='quantitative' />
      <column caption='Div1Longestgtime' datatype='integer' name='[div1longestgtime]' role='measure' type='quantitative' />
      <column caption='Div1Tailnum' datatype='integer' name='[div1tailnum]' role='measure' type='quantitative' />
      <column caption='Div1Totalgtime' datatype='integer' name='[div1totalgtime]' role='measure' type='quantitative' />
      <column caption='Div1Wheelsoff' datatype='integer' name='[div1wheelsoff]' role='measure' type='quantitative' />
      <column caption='Div1Wheelson' datatype='integer' name='[div1wheelson]' role='measure' type='quantitative' />
      <column caption='Div2Airport' datatype='integer' name='[div2airport]' role='measure' type='quantitative' />
      <column caption='Div2Airportid' datatype='integer' name='[div2airportid]' role='measure' type='quantitative' />
      <column caption='Div2Airportseqid' datatype='integer' name='[div2airportseqid]' role='measure' type='quantitative' />
      <column caption='Div2Longestgtime' datatype='integer' name='[div2longestgtime]' role='measure' type='quantitative' />
      <column caption='Div2Tailnum' datatype='integer' name='[div2tailnum]' role='measure' type='quantitative' />
      <column caption='Div2Totalgtime' datatype='integer' name='[div2totalgtime]' role='measure' type='quantitative' />
      <column caption='Div2Wheelsoff' datatype='integer' name='[div2wheelsoff]' role='measure' type='quantitative' />
      <column caption='Div2Wheelson' datatype='integer' name='[div2wheelson]' role='measure' type='quantitative' />
      <column caption='Div3Airport' datatype='integer' name='[div3airport]' role='measure' type='quantitative' />
      <column caption='Div3Airportid' datatype='integer' name='[div3airportid]' role='measure' type='quantitative' />
      <column caption='Div3Airportseqid' datatype='integer' name='[div3airportseqid]' role='measure' type='quantitative' />
      <column caption='Div3Longestgtime' datatype='integer' name='[div3longestgtime]' role='measure' type='quantitative' />
      <column caption='Div3Tailnum' datatype='integer' name='[div3tailnum]' role='measure' type='quantitative' />
      <column caption='Div3Totalgtime' datatype='integer' name='[div3totalgtime]' role='measure' type='quantitative' />
      <column caption='Div3Wheelsoff' datatype='integer' name='[div3wheelsoff]' role='measure' type='quantitative' />
      <column caption='Div3Wheelson' datatype='integer' name='[div3wheelson]' role='measure' type='quantitative' />
      <column caption='Div4Airport' datatype='integer' name='[div4airport]' role='measure' type='quantitative' />
      <column caption='Div4Airportid' datatype='integer' name='[div4airportid]' role='measure' type='quantitative' />
      <column caption='Div4Airportseqid' datatype='integer' name='[div4airportseqid]' role='measure' type='quantitative' />
      <column caption='Div4Longestgtime' datatype='integer' name='[div4longestgtime]' role='measure' type='quantitative' />
      <column caption='Div4Tailnum' datatype='integer' name='[div4tailnum]' role='measure' type='quantitative' />
      <column caption='Div4Totalgtime' datatype='integer' name='[div4totalgtime]' role='measure' type='quantitative' />
      <column caption='Div4Wheelsoff' datatype='integer' name='[div4wheelsoff]' role='measure' type='quantitative' />
      <column caption='Div4Wheelson' datatype='integer' name='[div4wheelson]' role='measure' type='quantitative' />
      <column caption='Div5Airport' datatype='integer' name='[div5airport]' role='measure' type='quantitative' />
      <column caption='Div5Airportid' datatype='integer' name='[div5airportid]' role='measure' type='quantitative' />
      <column caption='Div5Airportseqid' datatype='integer' name='[div5airportseqid]' role='measure' type='quantitative' />
      <column caption='Div5Longestgtime' datatype='integer' name='[div5longestgtime]' role='measure' type='quantitative' />
      <column caption='Div5Tailnum' datatype='integer' name='[div5tailnum]' role='measure' type='quantitative' />
      <column caption='Div5Totalgtime' datatype='integer' name='[div5totalgtime]' role='measure' type='quantitative' />
      <column caption='Div5Wheelsoff' datatype='integer' name='[div5wheelsoff]' role='measure' type='quantitative' />
      <column caption='Div5Wheelson' datatype='integer' name='[div5wheelson]' role='measure' type='quantitative' />
      <column caption='Divactualelapsedtime' datatype='integer' name='[divactualelapsedtime]' role='measure' type='quantitative' />
      <column caption='Divairportlandings' datatype='integer' name='[divairportlandings]' role='measure' type='quantitative' />
      <column caption='Divarrdelay' datatype='real' name='[divarrdelay]' role='measure' type='quantitative' />
      <column caption='Divdistance' datatype='real' name='[divdistance]' role='measure' type='quantitative' />
      <column caption='Diverted' datatype='integer' name='[diverted]' role='measure' type='quantitative' />
      <column caption='Divreacheddest' datatype='integer' name='[divreacheddest]' role='measure' type='quantitative' />
      <column caption='Firstdeptime' datatype='integer' name='[firstdeptime]' role='measure' type='quantitative' />
      <column caption='Flightdate' datatype='datetime' name='[flightdate]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Flightnum' datatype='integer' name='[flightnum]' role='dimension' type='ordinal' />
      <column caption='Flights' datatype='integer' name='[flights]' role='measure' type='quantitative' />
      <column caption='Lateaircraftdelay' datatype='real' name='[lateaircraftdelay]' role='measure' type='quantitative' />
      <column caption='Longestaddgtime' datatype='integer' name='[longestaddgtime]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nasdelay' datatype='real' name='[nasdelay]' role='measure' type='quantitative' />
      <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Originairportid' datatype='integer' name='[originairportid]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Originairportseqid' datatype='integer' name='[originairportseqid]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Origincitymarketid' datatype='integer' name='[origincitymarketid]' role='dimension' type='ordinal' />
      <column caption='Origincityname' datatype='string' name='[origincityname]' role='dimension' type='nominal' />
      <column caption='Originstate' datatype='string' name='[originstate]' role='dimension' type='nominal' />
      <column caption='Originstatefips' datatype='integer' name='[originstatefips]' role='measure' type='quantitative' />
      <column caption='Originstatename' datatype='string' name='[originstatename]' role='dimension' type='nominal' />
      <column caption='Originwac' datatype='integer' name='[originwac]' role='measure' type='quantitative' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Securitydelay' datatype='real' name='[securitydelay]' role='measure' type='quantitative' />
      <column caption='Tailnum' datatype='string' name='[tailnum]' role='dimension' type='nominal' />
      <column caption='Taxiin' datatype='real' name='[taxiin]' role='measure' type='quantitative' />
      <column caption='Taxiout' datatype='real' name='[taxiout]' role='measure' type='quantitative' />
      <column caption='Totaladdgtime' datatype='integer' name='[totaladdgtime]' role='measure' type='quantitative' />
      <column caption='Uniquecarrier' datatype='string' name='[uniquecarrier]' role='dimension' type='nominal' />
      <column caption='Weatherdelay' datatype='real' name='[weatherdelay]' role='measure' type='quantitative' />
      <column caption='Wheelsoff' datatype='integer' name='[wheelsoff]' role='measure' type='quantitative' />
      <column caption='Wheelson' datatype='integer' name='[wheelson]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_854839535450046464]' derivation='None' name='[none:Calculation_854839535450046464:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_69805825655717888]' derivation='User' name='[usr:Calculation_69805825655717888:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.546296' measure-ordering='alphabetic' measure-percentage='0.416667' parameter-percentage='0.037037' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_854839535450046464:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;On-Time&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Delayed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
      <datasources>
        <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
          <calculation class='tableau' formula='1000' />
          <range max='100000' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
        <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[carrier]' />
          <aliases>
            <alias key='&quot;9E&quot;' value='Endeavor' />
            <alias key='&quot;AA&quot;' value='American' />
            <alias key='&quot;AS&quot;' value='Alaska' />
            <alias key='&quot;B6&quot;' value='JetBlue' />
            <alias key='&quot;CO&quot;' value='Continental' />
            <alias key='&quot;DL&quot;' value='Delta' />
            <alias key='&quot;EV&quot;' value='ExpressJet' />
            <alias key='&quot;F9&quot;' value='Pro Air' />
            <alias key='&quot;FL&quot;' value='Airtran' />
            <alias key='&quot;HA&quot;' value='Hawaiin' />
            <alias key='&quot;MQ&quot;' value='Envoy' />
            <alias key='&quot;NK&quot;' value='Spirit' />
            <alias key='&quot;OH&quot;' value='PSA' />
            <alias key='&quot;OO&quot;' value='SKyWest' />
            <alias key='&quot;UA&quot;' value='United' />
            <alias key='&quot;US&quot;' value='US Airways' />
            <alias key='&quot;VX&quot;' value='Virgin America' />
            <alias key='&quot;WN&quot;' value='SouthWest' />
            <alias key='&quot;XE&quot;' value='Express Jet' />
            <alias key='&quot;YV&quot;' value='Mesa' />
          </aliases>
        </column>
        <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
          <calculation class='tableau' formula='1' />
        </column>
        <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
        <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
        <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
        <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]'>
        <groupfilter function='level-members' level='[none:Carrier (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]'>
        <groupfilter function='level-members' level='[none:dest:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:origin:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Airlines'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]' direction='ASC' using='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]' value='35' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='All Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='IsDelayed' datatype='string' name='[Calculation_854839535450046464]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_854839535460003841]) &gt; 0&#13;&#10;then &quot;Delayed&quot;&#13;&#10;else if ([Calculation_854839535460003841]) &lt; 0&#13;&#10;then &quot;Early&quot;&#13;&#10;ELSE &quot;On-Time&quot;&#13;&#10;END&#13;&#10;END' />
            </column>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_854839535450046464]' derivation='None' name='[none:Calculation_854839535450046464:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;Delayed&quot;' />
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;Early&quot;' />
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;On-Time&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' direction='ASC' using='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Day of Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[flightdate]' derivation='Day' name='[dy:flightdate:ok]' pivot='key' type='ordinal' />
            <column caption='Flightdate' datatype='datetime' name='[flightdate]' role='dimension' type='ordinal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]'>
            <groupfilter function='level-members' level='[none:carrier:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[dy:flightdate:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay Reasons'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[carrierdelay]' derivation='Avg' name='[avg:carrierdelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lateaircraftdelay]' derivation='Avg' name='[avg:lateaircraftdelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nasdelay]' derivation='Avg' name='[avg:nasdelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[securitydelay]' derivation='Avg' name='[avg:securitydelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weatherdelay]' derivation='Avg' name='[avg:weatherdelay:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrierdelay' datatype='real' name='[carrierdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Lateaircraftdelay' datatype='real' name='[lateaircraftdelay]' role='measure' type='quantitative' />
            <column caption='Nasdelay' datatype='real' name='[nasdelay]' role='measure' type='quantitative' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column caption='Securitydelay' datatype='real' name='[securitydelay]' role='measure' type='quantitative' />
            <column caption='Weatherdelay' datatype='real' name='[weatherdelay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:carrierdelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:lateaircraftdelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:nasdelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:securitydelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:weatherdelay:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:lateaircraftdelay:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:carrierdelay:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:nasdelay:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:weatherdelay:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:securitydelay:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay Status'>
      <layout-options export-center-horz='true' export-center-vert='true' />
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='IsDelayed' datatype='string' name='[Calculation_854839535450046464]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_854839535460003841]) &gt; 0&#13;&#10;then &quot;Delayed&quot;&#13;&#10;else if ([Calculation_854839535460003841]) &lt; 0&#13;&#10;then &quot;Early&quot;&#13;&#10;ELSE &quot;On-Time&quot;&#13;&#10;END&#13;&#10;END' />
            </column>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_854839535450046464]' derivation='None' name='[none:Calculation_854839535450046464:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[pcto:sum:Number of Records:qk:1]' />
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]' />
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[pcto:sum:Number of Records:qk]' />
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' />
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay at Top N'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='IsDelayed' datatype='string' name='[Calculation_854839535450046464]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_854839535460003841]) &gt; 0&#13;&#10;then &quot;Delayed&quot;&#13;&#10;else if ([Calculation_854839535460003841]) &lt; 0&#13;&#10;then &quot;Early&quot;&#13;&#10;ELSE &quot;On-Time&quot;&#13;&#10;END&#13;&#10;END' />
            </column>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_854839535450046464]' derivation='None' name='[none:Calculation_854839535450046464:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_854839535450046464:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' direction='ASC' using='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' value='56' />
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='vertical-align' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' />
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='6960' />
                <format attr='maxwidth' value='6960' />
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Geo'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Destcity' datatype='string' name='[destcityname - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[destcityname]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [destcityname], &quot;,&quot;, 1 ) )' />
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dallas/Fort Worth&quot;' value='&quot;Dallas&quot;' />
              </semantic-values>
            </column>
            <column caption='Destcityname' datatype='string' name='[destcityname]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Deststatename' datatype='string' name='[deststatename]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[destcityname - Split 1]' derivation='None' name='[none:destcityname - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[deststatename]' derivation='None' name='[none:deststatename:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Longitude (generated)]' field-type='quantitative' max='-5346398.8012700519' min='-13803842.186908688' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Latitude (generated)]' field-type='quantitative' max='7101941.1708894391' min='3060659.1634313278' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='8' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' field-type='quantitative' max-size='1' min-size='0.0103796' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <lod column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:destcityname - Split 1:nk]' />
              <lod column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:deststatename:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.96342754364013672' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Latitude (generated)]</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Heat Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Deststatename' datatype='string' name='[deststatename]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[deststatename]' derivation='None' name='[none:deststatename:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' field-type='quantitative' max-size='1' min-size='0.0103796' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:deststatename:nk]' />
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
              <geometry column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Latitude (generated)]</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Hour of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='CrsArrivalHour' datatype='integer' name='[Calculation_1515742780957089793]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(FLOOR([crsarrtime]/100.0))%24' />
            </column>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Crsarrtime' datatype='integer' name='[crsarrtime]' role='dimension' type='ordinal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1515742780957089793]' derivation='None' name='[none:Calculation_1515742780957089793:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1515742780957089793:ok]' />
              <groupfilter function='member' level='[none:Calculation_1515742780957089793:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Hour of Day(distr)'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Crsarrtime' datatype='integer' name='[crsarrtime]' role='dimension' type='ordinal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[crsarrtime]' derivation='None' name='[none:crsarrtime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Month Of Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Flightdate' datatype='datetime' name='[flightdate]' role='dimension' type='ordinal' />
            <column-instance column='[flightdate]' derivation='Month' name='[mn:flightdate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]'>
            <groupfilter function='level-members' level='[none:carrier:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[mn:flightdate:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Avg. Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='DelayPct' datatype='real' name='[Calculation_69805825655717888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_854839535460003841])/SUM([airtime])' />
            </column>
            <column caption='IsDelayed' datatype='string' name='[Calculation_854839535450046464]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_854839535460003841]) &gt; 0&#13;&#10;then &quot;Delayed&quot;&#13;&#10;else if ([Calculation_854839535460003841]) &lt; 0&#13;&#10;then &quot;Early&quot;&#13;&#10;ELSE &quot;On-Time&quot;&#13;&#10;END&#13;&#10;END' />
            </column>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Airtime' datatype='real' name='[airtime]' role='measure' type='quantitative' />
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airtime]' derivation='Avg' name='[avg:airtime:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_854839535450046464]' derivation='None' name='[none:Calculation_854839535450046464:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_69805825655717888]' derivation='User' name='[usr:Calculation_69805825655717888:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:airtime:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[usr:Calculation_69805825655717888:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;Delayed&quot;' />
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;Early&quot;' />
              <groupfilter function='member' level='[none:Calculation_854839535450046464:nk]' member='&quot;On-Time&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[usr:Calculation_69805825655717888:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='10' />
            <format attr='text-align' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Week Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Flightdate' datatype='datetime' name='[flightdate]' role='dimension' type='ordinal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightdate]' derivation='Weekday' name='[wd:flightdate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#62b6d5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[wd:flightdate:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1000'>
              <calculation class='tableau' formula='1000' />
              <range max='100000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
            <column caption='TotalDelay' datatype='real' name='[Calculation_854839535460003841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arrdelay]+[depdelay]' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[carrier]' />
              <aliases>
                <alias key='&quot;9E&quot;' value='Endeavor' />
                <alias key='&quot;AA&quot;' value='American' />
                <alias key='&quot;AS&quot;' value='Alaska' />
                <alias key='&quot;B6&quot;' value='JetBlue' />
                <alias key='&quot;CO&quot;' value='Continental' />
                <alias key='&quot;DL&quot;' value='Delta' />
                <alias key='&quot;EV&quot;' value='ExpressJet' />
                <alias key='&quot;F9&quot;' value='Pro Air' />
                <alias key='&quot;FL&quot;' value='Airtran' />
                <alias key='&quot;HA&quot;' value='Hawaiin' />
                <alias key='&quot;MQ&quot;' value='Envoy' />
                <alias key='&quot;NK&quot;' value='Spirit' />
                <alias key='&quot;OH&quot;' value='PSA' />
                <alias key='&quot;OO&quot;' value='SKyWest' />
                <alias key='&quot;UA&quot;' value='United' />
                <alias key='&quot;US&quot;' value='US Airways' />
                <alias key='&quot;VX&quot;' value='Virgin America' />
                <alias key='&quot;WN&quot;' value='SouthWest' />
                <alias key='&quot;XE&quot;' value='Express Jet' />
                <alias key='&quot;YV&quot;' value='Mesa' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdelay' datatype='real' name='[arrdelay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839535460003841]' derivation='Avg' name='[avg:Calculation_854839535460003841:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Depdelay' datatype='real' name='[depdelay]' role='measure' type='quantitative' />
            <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
            <column caption='Flightdate' datatype='datetime' name='[flightdate]' role='dimension' type='ordinal' />
            <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightdate]' derivation='None' name='[none:flightdate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightdate]' derivation='Year-Trunc' name='[tyr:flightdate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]'>
            <groupfilter function='level-members' level='[none:carrier:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:flightdate:qk]' first-period='-9' include-future='true' include-null='false' last-period='0' period-type='year' />
          <slices>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:flightdate:qk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</column>
            <column>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk] + [hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[sum:Number of Records:qk])</rows>
        <cols>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[tyr:flightdate:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Delay'>
      <style />
      <datasources>
        <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
        <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[carrier]' />
          <aliases>
            <alias key='&quot;9E&quot;' value='Endeavor' />
            <alias key='&quot;AA&quot;' value='American' />
            <alias key='&quot;AS&quot;' value='Alaska' />
            <alias key='&quot;B6&quot;' value='JetBlue' />
            <alias key='&quot;CO&quot;' value='Continental' />
            <alias key='&quot;DL&quot;' value='Delta' />
            <alias key='&quot;EV&quot;' value='ExpressJet' />
            <alias key='&quot;F9&quot;' value='Pro Air' />
            <alias key='&quot;FL&quot;' value='Airtran' />
            <alias key='&quot;HA&quot;' value='Hawaiin' />
            <alias key='&quot;MQ&quot;' value='Envoy' />
            <alias key='&quot;NK&quot;' value='Spirit' />
            <alias key='&quot;OH&quot;' value='PSA' />
            <alias key='&quot;OO&quot;' value='SKyWest' />
            <alias key='&quot;UA&quot;' value='United' />
            <alias key='&quot;US&quot;' value='US Airways' />
            <alias key='&quot;VX&quot;' value='Virgin America' />
            <alias key='&quot;WN&quot;' value='SouthWest' />
            <alias key='&quot;XE&quot;' value='Express Jet' />
            <alias key='&quot;YV&quot;' value='Mesa' />
          </aliases>
        </column>
        <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
        <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
        <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
        <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88273' id='5' param='horz' type='layout-flow' w='100000' x='0' y='11727'>
            <zone h='88273' id='3' type='layout-basic' w='90390' x='0' y='11727'>
              <zone h='44136' id='9' name='Delay at Top N' show-title='true' w='45195' x='45195' y='55864' />
              <zone h='44137' id='12' name='Delay Reasons' show-title='true' w='58980' x='0' y='11727' />
              <zone h='44137' id='13' name='Delay Status' show-title='true' w='31410' x='58980' y='11727' />
              <zone h='44136' id='20' name='Airlines' show-title='true' w='45195' x='0' y='55864' />
            </zone>
            <zone fixed-size='160' h='88273' id='4' is-fixed='true' param='vert' type='layout-flow' w='9610' x='90390' y='11727'>
              <zone h='7860' id='11' name='Delay at Top N' pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' w='9610' x='90390' y='11727' />
              <zone h='10824' id='14' name='Delay Status' pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]' type='color' w='9610' x='90390' y='19587' />
              <zone h='6442' id='22' mode='checkdropdown' name='Airlines' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]' type='filter' w='9610' x='90390' y='30411' />
              <zone h='15205' id='24' mode='dropdown' name='Delay Status' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' type='filter' w='9610' x='90390' y='36853' />
              <zone h='6442' id='23' mode='checkdropdown' name='Airlines' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]' type='filter' w='9610' x='90390' y='52058' />
              <zone h='6314' id='25' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='9610' x='90390' y='58500' />
            </zone>
          </zone>
          <zone h='11727' id='7' name='Overall Avg. Delay' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Maps'>
      <style />
      <datasources>
        <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
        <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[carrier]' />
          <aliases>
            <alias key='&quot;9E&quot;' value='Endeavor' />
            <alias key='&quot;AA&quot;' value='American' />
            <alias key='&quot;AS&quot;' value='Alaska' />
            <alias key='&quot;B6&quot;' value='JetBlue' />
            <alias key='&quot;CO&quot;' value='Continental' />
            <alias key='&quot;DL&quot;' value='Delta' />
            <alias key='&quot;EV&quot;' value='ExpressJet' />
            <alias key='&quot;F9&quot;' value='Pro Air' />
            <alias key='&quot;FL&quot;' value='Airtran' />
            <alias key='&quot;HA&quot;' value='Hawaiin' />
            <alias key='&quot;MQ&quot;' value='Envoy' />
            <alias key='&quot;NK&quot;' value='Spirit' />
            <alias key='&quot;OH&quot;' value='PSA' />
            <alias key='&quot;OO&quot;' value='SKyWest' />
            <alias key='&quot;UA&quot;' value='United' />
            <alias key='&quot;US&quot;' value='US Airways' />
            <alias key='&quot;VX&quot;' value='Virgin America' />
            <alias key='&quot;WN&quot;' value='SouthWest' />
            <alias key='&quot;XE&quot;' value='Express Jet' />
            <alias key='&quot;YV&quot;' value='Mesa' />
          </aliases>
        </column>
        <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
        <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
        <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
        <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88273' id='5' param='horz' type='layout-flow' w='100000' x='0' y='11727'>
            <zone h='88273' id='3' type='layout-basic' w='90390' x='0' y='11727'>
              <zone h='88273' id='30' name='Geo' show-title='true' w='45165' x='0' y='11727' />
              <zone h='88273' id='33' name='Heat Map' show-title='true' w='45225' x='45165' y='11727' />
            </zone>
            <zone fixed-size='160' h='88273' id='4' is-fixed='true' param='vert' type='layout-flow' w='9610' x='90390' y='11727'>
              <zone h='6442' id='22' mode='checkdropdown' name='Geo' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]' type='filter' w='9610' x='90390' y='11727' />
              <zone h='15205' id='24' mode='dropdown' name='Geo' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' type='filter' w='9610' x='90390' y='18169' />
              <zone h='6442' id='23' mode='checkdropdown' name='Geo' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]' type='filter' w='9610' x='90390' y='33374' />
              <zone h='6314' id='25' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='9610' x='90390' y='39816' />
              <zone h='7860' id='31' name='Geo' pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' w='9610' x='90390' y='46130' />
              <zone h='13401' id='32' name='Geo' pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='size' w='9610' x='90390' y='53990' />
            </zone>
          </zone>
          <zone h='11727' id='7' name='Overall Avg. Delay' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Trends'>
      <style />
      <datasources>
        <datasource caption='flight_data (default.flight_data)' name='hadoophive.16bg68x1j09wl61fjgzx10ac3inq' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.16bg68x1j09wl61fjgzx10ac3inq'>
        <column caption='CarrierName' datatype='string' name='[Carrier (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[carrier]' />
          <aliases>
            <alias key='&quot;9E&quot;' value='Endeavor' />
            <alias key='&quot;AA&quot;' value='American' />
            <alias key='&quot;AS&quot;' value='Alaska' />
            <alias key='&quot;B6&quot;' value='JetBlue' />
            <alias key='&quot;CO&quot;' value='Continental' />
            <alias key='&quot;DL&quot;' value='Delta' />
            <alias key='&quot;EV&quot;' value='ExpressJet' />
            <alias key='&quot;F9&quot;' value='Pro Air' />
            <alias key='&quot;FL&quot;' value='Airtran' />
            <alias key='&quot;HA&quot;' value='Hawaiin' />
            <alias key='&quot;MQ&quot;' value='Envoy' />
            <alias key='&quot;NK&quot;' value='Spirit' />
            <alias key='&quot;OH&quot;' value='PSA' />
            <alias key='&quot;OO&quot;' value='SKyWest' />
            <alias key='&quot;UA&quot;' value='United' />
            <alias key='&quot;US&quot;' value='US Airways' />
            <alias key='&quot;VX&quot;' value='Virgin America' />
            <alias key='&quot;WN&quot;' value='SouthWest' />
            <alias key='&quot;XE&quot;' value='Express Jet' />
            <alias key='&quot;YV&quot;' value='Mesa' />
          </aliases>
        </column>
        <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
        <column-instance column='[Carrier (copy)]' derivation='None' name='[none:Carrier (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[dest]' derivation='None' name='[none:dest:nk]' pivot='key' type='nominal' />
        <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
        <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88273' id='5' param='horz' type='layout-flow' w='100000' x='0' y='11727'>
            <zone h='88273' id='3' type='layout-basic' w='90390' x='0' y='11727'>
              <zone h='29424' id='26' name='Year' show-title='true' w='45165' x='0' y='11727' />
              <zone h='29424' id='27' name='Month Of Year' show-title='true' w='45225' x='45165' y='11727' />
              <zone h='29424' id='30' name='Week Day' show-title='true' w='45826' x='0' y='70576' />
              <zone h='29424' id='31' name='Hour of Day' show-title='true' w='44564' x='45826' y='70576' />
              <zone h='29425' id='28' name='Day of Month' show-title='true' w='90390' x='0' y='41151' />
            </zone>
            <zone fixed-size='160' h='88273' id='4' is-fixed='true' param='vert' type='layout-flow' w='9610' x='90390' y='11727'>
              <zone h='6442' id='22' mode='checkdropdown' name='Day of Month' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]' type='filter' w='9610' x='90390' y='11727' />
              <zone h='15205' id='24' mode='dropdown' name='Day of Month' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]' type='filter' w='9610' x='90390' y='18169' />
              <zone h='6442' id='23' mode='checkdropdown' name='Day of Month' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]' type='filter' w='9610' x='90390' y='33374' />
              <zone h='6314' id='25' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='9610' x='90390' y='39816' />
              <zone h='5669' id='29' name='Day of Month' pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' w='9610' x='90390' y='46130' />
              <zone h='7860' id='32' name='Hour of Day' pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' w='9610' x='90390' y='51799' />
            </zone>
          </zone>
          <zone h='11727' id='7' name='Overall Avg. Delay' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true' source-height='32'>
    <window class='worksheet' maximized='true' name='Delay Status'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Overall Avg. Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:year:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[tqr:flightdate:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
            <field>[textscan.1b0jajk0p6bxk81bcnopx1y952iu].[none:Description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='All Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:year:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[tqr:flightdate:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
            <field>[textscan.1b0jajk0p6bxk81bcnopx1y952iu].[none:Description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay at Top N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_854839535450046464:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:year:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[tqr:flightdate:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
            <field>[textscan.1b0jajk0p6bxk81bcnopx1y952iu].[none:Description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay Reasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:flightdate:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Month Of Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[mn:flightdate:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day of Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Week Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:flightdate:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour of Day(distr)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour of Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Airlines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Delay'>
      <viewpoints>
        <viewpoint name='Airlines'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Delay Reasons'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delay Status'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delay at Top N'>
          <zoom type='entire-view' />
          <highlight field='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Overall Avg. Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Trends'>
      <viewpoints>
        <viewpoint name='Day of Month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Hour of Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Month Of Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Avg. Delay'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Week Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Geo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
            <card pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Heat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[:Measure Names]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[avg:Calculation_854839535460003841:qk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Calculation_1515742780957089793:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:Carrier (copy):nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:carrier:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:crsarrtime:ok]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:dest:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[none:origin:nk]</field>
            <field>[hadoophive.16bg68x1j09wl61fjgzx10ac3inq].[yr:flightdate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Maps'>
      <viewpoints>
        <viewpoint name='Geo'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Heat Map' />
        <viewpoint name='Overall Avg. Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Delay Status' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Overall Avg. Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAYAAAD70GbAAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAzklEQVR4nO3cwQ2AMAwEQYLov5dUaLogSDtTwX1W8strZuaCqPv0ADhJAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgLTn9ICv7L1PT+CHlue4lDmBSBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANJe0VwKhil7
      vCUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='All Airports' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay at Top N' width='192'>
      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
      mtMAOOWp5h8Bp4HQ7t0/rwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='147' name='Delay Reasons' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Month Of Year' width='192'>
      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
      WvD/dHKGaDp9Fq0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Day of Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQX0lEQVR4nO3da2xb530G8OfceCjedLNkyYql+hLL18SO02RJmtZok7RdgRZBgaHd2k/t
      sGArUHRoh+3LgGFFNyDriqyXOUjX3Ns0g5MUcZomWZPm3jh24sR27MSxnViSbVGWRPF+ru8+
      UJKtqD6kTerQ8vv8AIqk+Mfhn8T78D3k4TlUhBACRJJSm90AUTPpMxcmJibgum7dCywUCojH
      43UvhygMSqNXgdLpNLq7uxu5SKIFw1UgkhoDQFJjAEhqDABJjQEgqTEAJDUGgKSmVy8hWryE
      EBAAhKhc9gUgIOD7ldsv2gBYjgdFAQAFigIoABRFmT6v1CgzFxYxIQRs14fl+bDds07T1y3X
      R9nxUHY8WK6P8byF9lgErTEDqaiBuKkjbmpImDpiER2aWv05cX0fBctD3nJRsFzkyy6yZQdT
      JQf5sgvL9WG5lfub6WHmf7brw3Iql8tOZRR1xCNItehIRQ2kWozpc332PG7qiEd0xCIaFEWB
      7fpwvMpjdM56rLZ3Ztkz9+l4PhxPwPU+elnA8effVun5TO+O5595rmf/ALbnw/NF8wPgej4m
      iw6OjOWxf2QKB05kcex0AQXLhaGrwHRiKwmevgzMPpCZkCRMDau6E7jysjZs6W9Df0cMCVMP
      LSS+ELAcHyXHQ8n2kCnZmCw6yBTnn+fKLoq2i6LloWh70DUFEV2tnDQV5uxlDaauwjRURA0N
      UUODEALpnIXc9KAtWB4K0wO56HgwVAXRiIYWo3IydRWW56NkV/oqOR5cXyAe0RA3dSRMHYlo
      ZbC2thhIRnVEDQ2tMQOmpiJiqDD16T6m+5q5HtFV+EIgW6r0ki05yJZdZEsOjk8UZ68XLBd5
      q/J4oQARTYUx/ZgNrXKKTC9/9r6MyvWZ26OGDkOtXNY1Zfr/ykeuT/d41nNoaCpUpfIiOnNe
      eUGtjIvQvwoxUbBx4MQU9o9MYf+JLI6NFRA3dazqimNjXys2LEthoDOO9pgROHhn2p6Z3qZK
      Do6k89g7nMHe4xkcnygiFtGweXlb5dTfhp5U9IICIYRAtuxiLGchnStPn1sYy1pI5y2ks2VM
      Fm3oqoqooSIW0dEWM9AWi6B9+rwtZqB9+noyWnm1jkW0ml+1a+3Tcv3ZgV5yPJRtD6ahITYT
      ikhlgF0Ks2cjhBaA7+98B7s+mIChqVjfm8LGvlZs7Evh8u4kDE3BzKpOI8w8pHTOwt7jGewd
      yuDNoQzyloPl7TFs6mtF3NRRsN05r6Az152PTLe25yNu6uhOmuhKRtGVNNE9fepKmliajKIj
      EYF+1kDmAFsc6gqA77kQigrXKkM1TBi6ds4AjOUsRA011NWSswkhULA8HJ8s4u3hDGzXRzyi
      z1mHjkd0xEwNEU2FftYUW5lGOagvRRceACHw4B3/iv7PfAWHXn0R13ziU7hy/Wp+G5QWlbq2
      A2zZugVWMY3T40W8c+gwxsfHkc/nG9Ub0YK78E+BFAXJ9m70Jgewfs0wEt3d6OzshOd5DWyP
      aGFxhxiSGr8KQVJjAEhqDABJjQEgqTEAJDUGgKTGAJDUGACSGgNAUmv6DjHUPG42C3t0NLDG
      6OiA0dkZUkfhYwAkdnrnEzj87e8E1vT/w3cx8L3vhtRR+LgKRFLjDEALZvypp+BMTAbWdN96
      K9SoGVJH8zEAtGCO3/5D5N96O7Cm85abGQBqDL9cxssDKwNrWlavwtUvvxhSRxc/BuBS4/v1
      3S4ZvgkmqV34DCAE/vfO27His99A6uTL2JXtw9c+t7WBrREAeNkpCNsOrNHa2qDoRkgdXVrq
      WgVau3YNsqUchkbS8OK9mJiYQD6f5y6RDXTqB/+M/AvPBtYM3P0wooPrQupoYfjlEkr73gqs
      0VKtDX+cde0UH0+2wdIECoqBQi6D9vZ2OI7TwPZIFu5YGsPf/uvAmtjH/wzL77irofdb1wyw
      cus2rASAwRW4Zfp/PHgULSYL8imQl8ti5HvfCqyJDKxAzz/9y0LcPdE8hddeQfmdffP+vyAB
      EK6L0ttvBtb4Z72xs4eO48NvfjWwPrb1GvT94EcN6Y8ujHX0fZQP7g+siW64AubHgrdFNEP+
      1ReQefjBef+/OLYD+B78XDa4pFgMqRk6l8IfX8LYT34YWNP9nX+8KANwLtwOQFJjAEhqDABJ
      7eJ4D3Cecs89g9xzzwTWtN36F4htuTqkjmixWpQBsI4cRu7/ngysiV97PcAAUBVcBSKpMQAk
      NQaApMYAkNQYAJIaA0BSYwBIagwASW1RbggjEvkcvHeDv5qttHdCW7kmsKauneJ3PrAdy677
      Ak7sew1qaz/+/NPXXvDiiM6HP3Ea9sP3BtZoV2ytGoC6VoGW9SyBjRiu2rQatuujUCjAsqx6
      FkkUqgsPgKIgHk/AyZ3Ej+58GCv6e6CqKvcJpkWlrvcAg9d/HoMAbtzyb7P/i0Qi9fZEFBop
      3gSLQr76IQETSc5eEpIiAOWf3Q5xOviXUFq+/2PA4NHVZMPtACQ1BoCkxgCQ1BgAkhoDQFJj
      AEhqUnwMejERvg8IEVzELeqhYQBClj/8LsqnTgbWtF6xGZH2jpA6khtXgUhqDABJjatAf0Lp
      5Ing7w4pClqW9YXXEC0YBuBPKBw7AhH0W2eqygBcIrgKRFLjDFAnOzOJ7IEqPxu0dCkSq4N3
      zaPmYADqJQSEG/zTsMLzQmqGzteFrwIJgVd/9wgODo/hkV/+D3YfHGpgW0ThmBcA13Uhqm2p
      nGYXMjh1aghax2oceft1eJ4Hv9qeV0QXkXkBOPTWLvz0jv/Eo08+B8sLCIKiYOnSbhhmAqNH
      90BPLkU2m0WpVFrIfokaat57gMz4GPpWb8DGVb3IFR2YyXPv5L762puxSjWweeAbMONJGJoK
      J+jjQ6KLzLwZYPhUGnv/8Dg+zOlYEjD4AUA3TBiaikSqFYbGT1Rp8ZkzA0ykT6Br2Qo4tov+
      ns5m9UQUmjkv24qioJw5iZHxAvza3gcTLWpzAtDe1QvHV6FbpzF6OtOsnohCM2cVyHMt9C3r
      hZpahus3DTSrJ6LQzJkBXnn2aSC5FD2RHHYdHG5WT0ShmTMD5As5vP/GLsDKYll8sFk9EYVm
      zgwwODiIWCyGlraluHx5V7N6IgrNnACsXL8VbaaPw/v34tRkvlk9EYVm3pbg9mWrsOHySbSY
      PMw5XfrmzAC5sSE8sXMnMrYKHpWDZDBnBkh2LceGywcQjxrI5PilNrr0zZkBpqamcNVVm1FS
      ktiwsqdZPRGFZs4M8PsndqCMKAAgmy+hK9XSlKaIwjInAF2XrcS69RsBAIlUqikNEYVpTgBu
      /OS2JrVB1BzzvsRfLhWRmxjF0eF0M/ohCtW87QCP/fp+aJqCA0fH8PW//Xus6gp+H+BZedx9
      9y/QvXIrvnjLDQvWKNFCmDcDDA6ugacncdOnt6EtXv1XE33PQjabRy5fRC6XQ7lcXog+iRbE
      vAAoqgIhgP7BjeiMVT9skC9cxOIdMDQB0zSh6zzUEC0e80arY7uYmhjFZLaE/u7Wqgsw40tx
      29/ddmaBDAAtInNG68E9z+P1A8eA2BJsWNHdrJ6IQjNnFWhgzRW4cu0K+MUMPhzlLpF06Zsz
      A8SS7bhh2024YdtNzeqHKFQ8mA9JjQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCp
      MQAkNQaApMYAkNQYAJJa3QHwnTJ2PPQgdu97rxH9EIWq7gAUsh/ivaPjKJdt2LYN13Ub0RdR
      KOoOgBntQM/SJI4dPYJyucwfyqZFpe492CPxJfirr/0lNN2Apqk8LAotKg04hIOCiGnWvxii
      JuCnQCQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGoM
      AEmNASCpNSQAk8f348W9RxqxKKJQ1R0A4bvY8/If8P7IeCP6IQpV3QGw8mMYm7IwemoU4+Pj
      yOfzjeiLKBR17xMcTfXiq9/8FqbKPloTLfA8rxF9EYWiATvFA9BNtCYasiSiUPFTIJIaA0BS
      YwBIagwASY0BIKkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTGAJDU6g6A
      a+fxu8cfxf7DI43ohyhUdQdAM2L41Cevw+7XX29EP0ShqjsAvlvGjseewpe+9HnuFE+LTv0B
      cGz09PZiZOQkOjs7kUhw52BaPOreKd6IteGmW25pRC9EoeOnQCQ1BoCkxgCQ1BgAkhoDQFJj
      AEhqDABJjQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGr1/0yqZ+O3Ox7AvqOjjeiHKFR1B6Cc
      G4UT68M7r7/SiH6IQtWAfYJbMHnyPSjRtkb0QxSquvcIi8Q78dmbP4e2nssa0Q9RqGYDMDEx
      Add1L2ghmtmC3OQ4cgDy+TyW9PSg/Stfn1Nj2zYikciZO+7uAQAUi0VEUq1V6yP9K2DbNlRV
      RcumK+fUf7QWACIrVqFUKsE0TehXXwdRyJ2pt2xEzLn1UFUUi0XEYjG09PZB+N656xXlTO9m
      FC2XLZ+9yfd8+MKHrp95bdGTKQghUCqVYLR3QDnrNtd1oSoqVO3MZKya0dleEp/YBmNZX+Bj
      1do7UCwWETUM9N32N4HPo7FkyWzv8bVrq9anrt4Kx3EghEB07Yaqz7u5Zt1s711f/jJar7su
      sF6NVh5rJJGsPgaWf2y292gyBf3Gz8zeJnwB13NhGMaZZfcunx0Dsas+DkU98xx7ng8IAYgG
      S6fTC1afzWZFsVisuX58fFw4jrMgvZxvve/751W/kL2cb32xWBTZbPai6OV866uNgYYH4Fxe
      2vkr8dq7J2qq3bf7ZXHPfQ+IvOXVUO2IZ5/8jXj8mZdq7mX0/T1ix9Ov1VSbOfaGuPP+x8Rk
      0a6p/qVndoodTz4rfN+vXuz74o0/Pi/+447twq1h2XYxI+6566fi96/sq6mXoUN7xL333ScO
      j0xWrU1/cEDcv+NJ8cLTj4tfPfpbUa394lRa/Ozn94tiZlT8988fCKz1fV/85p67xKETI+Lx
      Rx4WTz2/O7DetQvixz/ZLjKjQ+Kh+34hDgwH95+fOCG23/1LIYQv7tu+XeSDWxeHdj0ldr6w
      Tzzy0L0itO0A3ak4Jgrlmmo3bLkGmluCqKlax+bNGzE8NFxbvfCwe88+lIq56rUAjn9wDLZV
      QK5g11T/5tv7YBfytfWiKFh5WSfWXnkttBrKfbeEsfQYxiamauqlXMxDoIjXdh2sWtuS7IRT
      nMLIeB4oV1++qrdAEzZUIwZVWFXrW1tMWFoc12xZi3y1caCoMHQV8SV9GFgSwehYNrBciySh
      emUMv7sXx0dz8AKrgd7OVpzOTuHUybHwNoSlUqmaax+5+7+Q0zuh1TKMhIM9b+yHrim1LdzO
      oWC5OD5ysqbyrv61SIkppKcKNdUPLF+OoaEh+LV1g/3738emTYM11bpWEUaiC55VW3i7lg1A
      LdtYtW5F1dpEMgVVURDxSxjLOVXrzVgCpqHNngdRFAWpZBLlzAj+/Y77sWplX2C9pkcRj5nI
      jn6IoSkbbjH4uY/GE4joKjL5EqxsGhNTxcD6VDIFCGDd+nX4f/Chf9zlWX+zAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Week Day' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour of Day(distr)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hour of Day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airlines' width='192'>
      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
      DjiOfFGZNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heat Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Maps' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
